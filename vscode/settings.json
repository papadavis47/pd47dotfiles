{
  "python.terminal.executeInFileDir": true,
  "editor.fontFamily": "MonoLisa",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontLigatures": true,
  "vim.useSystemClipboard": true,
  "zenMode.fullScreen": true,
  "git.confirmSync": false,
  "workbench.startupEditor": "newUntitledFile",
  "editor.letterSpacing": 1,
  "workbench.editor.enablePreviewFromQuickOpen": false,
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode",
    "editor.tabSize": 2
  },
  // Trying to fix terminal issue with bun and pnpm
  "terminal.integrated.showExitAlert": false,
  "css.lint.unknownAtRules": "ignore",
  "liveServer.settings.donotShowInfoMsg": true,
  "liveServer.settings.donotVerifyTags": true,
  "[astro]": {
    "editor.defaultFormatter": "astro-build.astro-vscode"
    // "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.tabSize": 2,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  // Experiment here with the following:
  "workbench.tree.indent": 15,
  "workbench.tree.renderIndentGuides": "always",
  "workbench.colorCustomizations": {
    "tree.indentGuidesStroke": "#05ef3c"
  },
  // End experiment
  "workbench.editor.restoreViewState": false,
  "window.restoreWindows": "none",
  "explorer.confirmDragAndDrop": false,
  "extensions.ignoreRecommendations": true,
  "vsicons.dontShowNewVersionMessage": true,
  "editor.renderWhitespace": "all",
  "editor.suggestSelection": "first",
  "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
  "java.jdt.ls.java.home": "/usr/lib/jvm/jdk-11.0.2",
  "vim.handleKeys": {
    "<C-d>": false,
    "<C-w>": false,
    "<C-k>": false,
    "<C-p>": false,
    "<C-e>": false,
    "<C-n>": false,
    "<C-f>": false,
    "<C-l>": false,
    "shift+ctrl+[": false,
    "shift+ctrl+]": false,
    "<C-m>": false,
    "<C-x>": false,
    "<C-b>": false,
    "<C-t>": false,
    "ctrl+right": false,
    "ctrl+left": false
  },
  "vim.cursorStylePerMode.insert": "line",
  "vim.cursorStylePerMode.normal": "block",
  "vim.cursorStylePerMode.replace": "underline-thin",
  "vim.cursorStylePerMode.visual": "line",
  "vim.cursorStylePerMode.visualblock": "line",
  "vim.cursorStylePerMode.visualline": "block",
  "vim.highlightedyank.enable": true,
  "vim.scroll": 10,
  "vim.vimrc.path": "~/.vimrc",
  "vim.insertModeKeyBindings": [],
  "editor.minimap.renderCharacters": false,
  "python.languageServer": "Pylance",
  "editor.linkedEditing": true,
  "editor.cursorWidth": 2,
  "editor.renderLineHighlight": "none",
  "python.linting.pylintUseMinimalCheckers": false,
  "python.pythonPath": "/usr/bin/python3",
  "terminal.integrated.cursorBlinking": true,
  "emmet.includeLanguages": {
    "javascript": "javascriptreact",
    "postcss": "css"
  },
  "files.associations": {
    "**/*.html": "html",
    "**/templates/**/*.html": "django-html",
    "**/templates/**/*": "django-txt",
    "**/requirements{/**,*}.{txt,in}": "pip-requirements"
  },
  "python.analysis.completeFunctionParens": true,
  "python.analysis.diagnosticSeverityOverrides": {
    "reportMissingModuleSource": "none"
  },
  "keyboard.dispatch": "keyCode",
  "files.exclude": {
    "**/__pycache__": true,
    "venv/": true
  },

  "[python]": {
    "editor.defaultFormatter": "ms-python.black-formatter",
    "python.formatting.provider": "none"
  },
  "prettier.printWidth": 100,
  "[markdown]": {
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[shellscript]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "editor.wordWrapColumn": 100,
  "python.analysis.autoImportCompletions": false,
  "python.analysis.autoSearchPaths": false,
  "vim.vimrc.enable": true,
  "vim.leader": "<space>",
  "workbench.editor.tabCloseButton": "off",
  "liveshare.authenticationProvider": "GitHub",
  "prettier.jsxSingleQuote": true,
  "prettier.quoteProps": "preserve",
  "eslint.options": {},
  "javascript.updateImportsOnFileMove.enabled": "always",
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": true,
  "editor.formatOnType": true,
  "editor.scrollbar.vertical": "hidden",
  "editor.scrollbar.horizontalScrollbarSize": 16,
  "security.workspace.trust.untrustedFiles": "open",
  "prettier.proseWrap": "always",
  "html.format.templating": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": true,
  "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": false,
  "javascript.preferences.importModuleSpecifierEnding": "index",
  "[rust]": {
    "editor.defaultFormatter": "jinxdash.prettier-rust",
    "editor.formatOnSave": true
  },
  "[ignore]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  "emmet.showSuggestionsAsSnippets": true,
  "html-css-class-completion.enableEmmetSupport": true,
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "python.defaultInterpreterPath": "/usr/bin/python3",
  "workbench.iconTheme": "bearded-icons",
  "editor.minimap.enabled": false,
  "workbench.editor.showTabs": "single",
  "workbench.statusBar.visible": true,

  // Better Defaults from Caleb Forzio:
  "window.newWindowDimensions": "inherit",
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  // I changed the below line on 2023-09-17
  "editor.snippetSuggestions": "inline",
  "workbench.editor.enablePreview": false,
  "editor.lineNumbers": "relative",

  //  Silence the noise - by Caleb Forzio
  "editor.lightbulb.enabled": "off",
  "breadcrumbs.enabled": false,
  "editor.overviewRulerBorder": false,
  "workbench.tips.enabled": false,
  "editor.colorDecorators": true,
  "problems.decorations.enabled": false,
  "editor.renderControlCharacters": false,
  "editor.hideCursorInOverviewRuler": true,
  //   2nd try with Porzio
  "git.decorations.enabled": false,
  "editor.codeLens": false,
  // The below setting is something I will experiment with
  "editor.occurrencesHighlight": "singleFile",

  // Typography
  "editor.lineHeight": 26,
  "editor.fontSize": 16,
  "editor.suggestFontSize": 15,
  "editor.suggestLineHeight": 28,
  "terminal.integrated.fontSize": 15,
  "terminal.integrated.lineHeight": 1,

  // Terminal settings

  "terminal.integrated.profiles.linux": {
    "bash": {
      "path": "/bin/bash",
      "icon": "terminal-bash"
    },
    "zsh": {
      "path": "zsh"
    },
    "fish": {
      "path": "fish"
    },
    "tmux": {
      "path": "tmux",
      "icon": "terminal-tmux"
    },
    "pwsh": {
      "path": "pwsh",
      "icon": "terminal-powershell"
    }
  },

  // Some new liveserver config for html files that need it

  "liveServer.settings.fullReload": true,
  //   "liveServer.settings.root": "/src",
  "liveServer.settings.root": "/",
  "[dotenv]": {
    "editor.defaultFormatter": "foxundermoon.shell-format"
  },
  // Find exclusions:

  "search.exclude": {
    "**/node_modules": true,
    "**/dist": true,
    "**/package-lock.json": true,
    "**/yarn.lock": true
  },
  "monokaiPro.fileIconsMonochrome": true,
  "terminal.integrated.confirmOnKill": "never",
  "terminal.integrated.copyOnSelection": true,
  "terminal.integrated.enablePersistentSessions": false,

  // This was set in the GUI - I can always go back to native if I want
  "window.titleBarStyle": "custom",
  // The following was set when I began working with MDX
  "[mdx]": {
    "editor.wordWrap": "wordWrapColumn",
    "editor.wordWrapColumn": 100,
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "eslint.probe": [
    "javascript",
    "javascriptreact",
    "typescript",
    "typescriptreact",
    "html",
    "vue",
    "markdown",
    "bash"
  ],
  "typescript.updateImportsOnFileMove.enabled": "always",
  "prettier.singleQuote": true,
  "typescript.preferences.quoteStyle": "single",
  "terminal.integrated.tabs.hideCondition": "singleGroup",
  "terminal.integrated.tabs.showActions": "never",
  "terminal.integrated.tabs.focusMode": "singleClick",
  "terminal.integrated.tabs.enableAnimation": false,
  "terminal.integrated.shellIntegration.history": 50,
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.tabs.enabled": false,
  "markdownlint.config": {
    "MD033": false,
    "no-inline-html": {
      "allowed_elements": ["h1", "p", "img"]
    },
    "MD013": { "line_length": 100 }
  },
  "totalTypeScript.hiddenTips": [
    "type-alias-declaration",
    "type-alias-with-generics",
    "literal-type",
    "typing-function-parameters",
    "ts-object-type",
    "basic-types",
    "variable-type-annotation",
    "interface-declaration",
    "optional-object-property",
    "union-type",
    "null-keyword",
    "array-type",
    "mapped-type",
    "never-keyword",
    "passing-generics-to-types",
    "non-null-expression",
    "as-assertion",
    "undefined-keyword",
    "any-type",
    "typeof",
    "function-return-type",
    "as-const",
    "as-const-on-object",
    "omit-utility-type",
    "tuple-type"
  ],
  "totalTypeScript.hideAllTips": false,
  "totalTypeScript.hideBasicTips": false,
  "workbench.layoutControl.enabled": false,
  "window.doubleClickIconToClose": true,
  "editor.wordWrap": "bounded",
  "editor.formatOnPaste": true,
  "workbench.sideBar.location": "right",
  "editor.inlineSuggest.enabled": true,
  "[prisma]": {
    "editor.defaultFormatter": "Prisma.prisma"
  },
  "github.copilot.enable": {
    "*": false,
    "plaintext": false,
    "markdown": false,
    "scminput": false
  },
  "workbench.colorTheme": "Winter is Coming (Dark Black)",
  "terminal.integrated.altClickMovesCursor": false,
  "workbench.activityBar.location": "hidden",
  "window.zoomLevel": 1,
  "workbench.editor.tabActionCloseVisibility": false,
  "prettier.enableDebugLogs": true,
  "prettier.htmlWhitespaceSensitivity": "strict",
  "prettier.useEditorConfig": false,
  "editor.formatOnSave": true
}
