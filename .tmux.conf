# changing the prefix key here. Found this on the Upcase tutorial for tmux.
unbind C-b
set -g prefix C-s

# use this to source a new config
bind-key r source-file ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"
# I am going to hold on the following six lines until I understand more about
# tmux. I have to see the Thoughbot videos again. My concern comes from the
# problems arising from vim intergration.

# This following lines are for the plugin manager
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'dracula/tmux'

# the following is for window navigation
bind-key -n C-h select-pane -L
bind-key -n C-j select-pane -D
bind-key -n C-k select-pane -U
bind-key -n C-l select-pane -R

# The following is for when I have Dracula enabled
set -g @dracula-show-battery false
set -g @dracula-show-weather false

# this will make sure tmux does not mess with my colors in vim
set-option -g default-terminal "xterm-256color"

# this changes the color of the tmux status bar that originally showed as lime
# green
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'
# this displays the full name of the current session without cutting off
set-option -g status-left-length 50

set-option -g status-right "\"<==Keep Hammering==++\"  #(date '+%a, %b %d - %I:%M')"

# The following is for re-enabling 'clear screen'
bind C-l send-keys 'C-l'

# Fine adjustment (1 or 2 cursor cells per bump)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1

# Coarse adjustment (5 or 10 cursor cells per bump)
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

bind c new-window -c "#{pane_current_path}"

set-option -g base-index 1
set-option -g renumber-windows on

bind-key b break-pane -d

bind-key - split-window -v  -c '#{pane_current_path}'
bind-key ] split-window -h  -c '#{pane_current_path}'

# I have more questions about the following lines. I will look into it soon.
bind-key C-j choose-tree


# Use vim keybindings in copy mode
setw -g mode-keys vi

# Make Vim responsive to esc
set -s escape-time 0

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator

is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
    bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
    bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
    bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
    bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
    tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
    if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
          "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
          if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
                "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

                bind-key -T copy-mode-vi 'C-h' select-pane -L
                bind-key -T copy-mode-vi 'C-j' select-pane -D
                bind-key -T copy-mode-vi 'C-k' select-pane -U
                bind-key -T copy-mode-vi 'C-l' select-pane -R
                bind-key -T copy-mode-vi 'C-\' select-pane -l


# I found the following line through watching Thoughtbot.
bind-key h split-window -h "htop"
# Here is some more clever stuff found on Thoughtbot. Access to "todo" file.
bind-key e split-window -h -c ~/ "vim todo.md"

# The tmux plugin required line for tpm
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'
